#!/bin/bash

# Publish MCP Server to Registry
# Usage: ./script/publish-mcp-server [--init] [--dry-run]

set -e

# Parse command line options
INIT=false
DRY_RUN=false

for arg in "$@"; do
  case $arg in
    --init)
      INIT=true
      ;;
    --dry-run)
      DRY_RUN=true
      ;;
  esac
done

echo "🚀 Publishing GitHub MCP Server to Registry"
echo "============================================"

# Step 1: Ensure mcp-publisher CLI is installed
echo "📦 Checking mcp-publisher installation..."
if ! command -v mcp-publisher &> /dev/null; then
  echo "Installing mcp-publisher with Homebrew..."
  if command -v brew &> /dev/null; then
    brew install mcp-publisher
  else
    echo "❌ Homebrew not found. Please install mcp-publisher manually:"
    echo "curl -L \"https://github.com/modelcontextprotocol/registry/releases/download/v1.0.0/mcp-publisher_1.0.0_$(uname -s | tr '[:upper:]' '[:lower:]')_$(uname -m | sed 's/x86_64/amd64/;s/aarch64/arm64/').tar.gz\" | tar xz mcp-publisher && sudo mv mcp-publisher /usr/local/bin/"
    exit 1
  fi
fi
echo "✅ mcp-publisher is available"

# Step 2: Authenticate with GitHub
echo ""
echo "🔐 Authenticating with MCP registry..."
if ! mcp-publisher whoami &> /dev/null; then
  mcp-publisher login github
fi
echo "✅ Authentication successful"

# Step 3: Update version from latest git tag
echo ""
echo "🏷️  Updating server.json version..."
LATEST_TAG=$(git tag --sort=-version:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+(-.*)?$' | head -n 1)
if [ -z "$LATEST_TAG" ]; then
  echo "❌ No release tag found. Cannot determine version."
  exit 1
fi

TAG_VERSION=$(echo "$LATEST_TAG" | sed 's/^v//')
jq ".version = \"$TAG_VERSION\" | .packages[].version = \"$TAG_VERSION\"" server.json > server.json.tmp && mv server.json.tmp server.json

echo "✅ Updated server.json version to $TAG_VERSION (from git tag $LATEST_TAG)"

# Step 4: User confirmation
echo ""
echo "📋 Version Summary:"
echo "   Latest git tag: $LATEST_TAG"
echo "   Server version: $TAG_VERSION"
echo ""
read -p "Proceed with publishing this version? (y/n) " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
  echo "❌ Publish cancelled by user."
  exit 1
fi

# Step 5: Publish to registry
echo ""
if [ "$DRY_RUN" = true ]; then
  echo "🧪 DRY RUN: Skipping actual publish step"
else
  echo "📤 Publishing to MCP registry..."
  mcp-publisher publish
  echo "✅ Successfully published!"
fi

# Step 6: Verify publication
echo ""
echo "🔍 Verifying server in registry..."
SERVER_NAME=$(jq -r .name server.json)
curl -s "https://registry.modelcontextprotocol.io/v0/servers?search=$SERVER_NAME" | jq

echo ""
echo "🎉 Done!"
